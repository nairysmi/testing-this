#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <errno.h>
#include <time.h>
#include <dirent.h>
#include <assert.h>
#include <signal.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <arpa/inet.h>

int main() {

  int SDtoServer;
  //int SDfromSubServer;
  //  int connectnum;
  char message[255];
  char clientname[255];//aka pid #
  struct sockaddr{
    sa_family_t sinfamily; //AF_INET
    in_port_t sin_port; //is a port number
    struct in_addr sin_addr; //an IP address
  };

  struct in_addr {
    uint32_t s_addr;     /* address in network byte order */
  };
  struct sockaddr *destination;
  destination=(struct sockaddr *)malloc(sizeof(struct sockaddr));
  destination->sinfamily=AF_INET;
  destination->sin_port=htons(8080);
  ( destination->sin_addr)->s_addr=htonl(127.0.0.1);

  

  umask(0000);
  sprintf(clientname, "%d", getpid()); 
  
  SDtoServer=socket(AF_INET,SOCK_STREAM,0);
  connect(SDtoServer,destination, sizeof(struct in_addr));
  write(SDtoServer, clientname, strlen(clientname)+1)
  read(SDtoServer,message,255);
  
 
  printf("message: %s ", message);
  
  shutdown(SDtoServer, SHUT_RDWR);


  return 1;
}
